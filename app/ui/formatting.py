# app/ui/formatting.py
import hashlib
import html
from ..core.models import FFEvent
from ..services.translator import translate_title

IMPACT_EMOJI = {
    "High": "üî¥",
    "Medium": "üü†",
    "Low": "üü°",
    "Holiday": "üü¶",
}

def event_hash(ev: FFEvent) -> str:
    base = f"{ev.date.isoformat()}|{ev.title}|{ev.country}|{ev.currency}|{ev.impact}"
    return hashlib.sha1(base.encode()).hexdigest()

from ..ui.filters import normalize_impact

IMPACT_ICON = {
    "High": "üî¥",
    "Medium": "üü†",
    "Low": "üü°",
    "Non-economic": "‚ö™Ô∏è",
}

def event_to_text(ev, tz, lang: str = "en") -> str:
    """
    –ö—Ä–∞—Å–∏–≤–∏–π –∫–æ–º–ø–∞–∫—Ç–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç –¥–ª—è Telegram.
    1) –ß–∞—Å (–ª–æ–∫–∞–ª—å–Ω–∏–π) + —ñ–∫–æ–Ω–∫–∞ —Ä—ñ–≤–Ω—è + –∂–∏—Ä–Ω–∞ –Ω–∞–∑–≤–∞ –ø–æ–¥—ñ—ó
    2) –í–∞–ª—é—Ç–∞ ¬´–±–µ–π–¥–∂–µ–º¬ª (–º–æ–Ω–æ—à–∏—Ä–∏–Ω–Ω–∏–π <code>USD</code>), –¥–æ–¥–∞—Ç–∫–æ–≤–æ –∫—Ä–∞—ó–Ω–∞ (—è–∫—â–æ –≤—ñ–¥—Ä—ñ–∑–Ω—è—î—Ç—å—Å—è)
    3) –ü–æ–∫–∞–∑–Ω–∏–∫–∏: Actual | Forecast | Previous (–ª–∏—à–µ —Ç—ñ, —â–æ —î)
    """
    # –ª–æ–∫–∞–ª—å–Ω–∏–π —á–∞—Å
    lt = ev.date.astimezone(tz)

    # —ñ–∫–æ–Ω–∫–∞ —ñ–º–ø–∞–∫—Ç—É
    impact_norm = normalize_impact(getattr(ev, "impact", "") or "")
    icon = IMPACT_ICON.get(impact_norm, "üîò")

    # –ø–µ—Ä–µ–∫–ª–∞–¥ –Ω–∞–∑–≤–∏ –ø–æ–¥—ñ—ó
    translated_title = translate_title(ev.title, lang)
    # –µ–∫—Ä–∞–Ω—É—î–º–æ HTML —Å–ø–µ—Ü—Å–∏–º–≤–æ–ª–∏
    translated_title = html.escape(translated_title)

    # —Ä—è–¥–æ–∫ 1: —á–∞—Å + –Ω–∞–∑–≤–∞
    head = f"üïí <b>{lt:%a %d %b %H:%M}</b> ‚Äî {icon} <b>{translated_title}</b>"

    # —Ä—è–¥–æ–∫ 2: –≤–∞–ª—é—Ç–∞ / –∫—Ä–∞—ó–Ω–∞
    cur = (getattr(ev, "currency", "") or "").strip().upper()
    country = (getattr(ev, "country", "") or "").strip().upper()
    who = []
    if cur:
        # –º–æ–Ω–æ—à–∏—Ä–∏–Ω–Ω–∏–π ¬´–±–µ–π–¥–∂¬ª ‚Äî –≤ –¢–µ–ª–µ–≥—Ä–∞–º—ñ —á–∏—Ç–∞—î—Ç—å—Å—è –∑–Ω–∞—á–Ω–æ –∫—Ä–∞—â–µ
        who.append(f"<b><code>{html.escape(cur)}</code></b>")
    if country and country != cur:
        who.append(html.escape(country))
    meta = " ".join(who) if who else ""

    # —Ä—è–¥–æ–∫ 3: –º–µ—Ç—Ä–∏–∫–∏ (–ª–∏—à–µ –Ω–∞—è–≤–Ω—ñ), —Å–ø–æ—á–∞—Ç–∫—É Actual
    stats = []
    actual = getattr(ev, "actual", None)
    forecast = getattr(ev, "forecast", None)
    previous = getattr(ev, "previous", None)
    if actual:
        stats.append(f"Actual: <b>{html.escape(str(actual))}</b>")
    if forecast:
        stats.append(f"Forecast: <b>{html.escape(str(forecast))}</b>")
    if previous:
        stats.append(f"Previous: <b>{html.escape(str(previous))}</b>")
    stats_line = " | ".join(stats)

    # —Å–∫–ª–∞–¥–∞–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
    lines = [head]
    if meta:
        lines.append(meta)
    if stats_line:
        lines.append(stats_line)

    return "\n".join(lines)
